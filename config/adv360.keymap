#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include "keys_de_swiss.h"
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/rgb.h>
#include <dt-bindings/zmk/backlight.h>
#include <dt-bindings/zmk/outputs.h>

#define DVORAK 0
#define QWERTZ 1
#define NUM_LAYER 2
#define FN_LAYER 3
#define MOD_LAYER 4

/ {
    behaviors {
        #include "macros.dtsi"
        #include "dvorak_behaviors_ch.dtsi"
        #include "version.dtsi"
        #ifndef VERSION_MACRO
            macro_ver: macro_ver {
              compatible = "zmk,behavior-macro";
              #binding-cells = <0>;
              bindings = <&kp RET>;
            };
        #endif
        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        // empty {
        //   bindings = <
        //     &trans    &trans  &trans  &trans  &trans  &trans  &trans                                         &trans &trans &trans &trans &trans  &trans  &trans
        //     &trans    &trans  &trans  &trans  &trans  &trans  &trans                                         &trans &trans &trans &trans &trans  &trans  &trans
        //     &trans    &trans  &trans  &trans  &trans  &trans  &trans        &trans &trans &trans &trans      &trans &trans &trans &trans &trans  &trans  &trans
        //     &trans    &trans  &trans  &trans  &trans  &trans                      &trans &trans                     &trans &trans &trans &trans  &trans  &trans
        //     &trans    &trans  &trans  &trans  &trans                &trans &trans &trans &trans &trans &trans              &trans &trans &trans  &trans  &trans
        //   >;
        // };
        
        // DVORAK Layout (Programmer, Switzerland DE adjusted)
        dvorak {
            bindings = <
&chddllr      &chdlbkt  &chdlbrc   &chdrbrc  &chdlpar  &chdequal  &tog NUM_LAYER                                                        &tog QWERTZ    &chdastrk    &chdrpar  &chdplus  &chdrbkt  &chdexcl  &chdhash  
&kp TAB       &chdsemi  &chdcomma  &chddot   &kp P     &kp CH_Y   &chdeur                                                               &mo MOD_LAYER  &kp F        &kp G     &kp C     &kp R     &kp L     &chdslsh
&kp ESC       &kp A     &kp O      &kp E     &kp U     &kp I      &chdamps        &kp LCTRL  &kp LGUI      &kp RGUI   &kp RCTRL         &chddiae       &kp D        &kp H     &kp T     &kp N     &kp S     &kp CH_MINS
&kp LSHFT     &chdquot  &kp Q      &kp J     &kp K     &kp X                                 &none      &none                                          &kp B        &kp M     &kp W     &kp V     &kp CH_Z  &kp RSHFT
&mo FN_LAYER  &none     &none      &none     &none                      &kp BSPC  &kp DEL    &kp LALT   &kp RALT  &kp ENTER  &kp SPACE                              &none     &none     &chdat    &chdbsls  &mo FN_LAYER
            >;
        };

        // QWERTZ Layout (Switzerland DE adjusted)
        qwertz {
            bindings = <
&kp GRAVE  &kp N1     &kp N2    &kp N3    &kp N4     &kp N5  &trans                                             &trans  &kp N6      &kp N7      &kp N8      &kp N9    &kp N0        &kp CH_CIRC
&kp TAB    &kp Q      &kp W     &kp E     &kp R      &kp T   &trans                                             &trans  &kp CH_Z    &kp U       &kp I       &kp O     &kp P         &kp CH_QUOT
&kp ESC    &kp A      &kp S     &kp D     &kp F      &kp G   &kp CH_LABK    &trans  &trans  &trans  &trans      &trans  &kp H       &kp J       &kp K       &kp L     &kp CH_DIAE   &kp BSLH
&kp LSHFT  &kp CH_Y   &kp X     &kp C     &kp V      &kp B                          &trans  &trans                      &kp N       &kp M       &kp COMMA   &kp DOT   &kp CH_MINS   &kp RSHFT
&trans     &trans     &kp CAPS  &kp LEFT  &kp RIGHT                 &trans  &trans  &trans  &trans  &trans  &trans                  &kp DOWN    &kp UP      &kp LBKT  &kp RBKT      &trans
            >;
        };

        // NUM Layer
        num {
            bindings = <
&trans  &kp N1  &kp N2  &kp N3    &kp N4     &kp N5  &trans                                      &trans  &kp N6  &kp KP_NUM  &kp KP_EQUAL  &kp KP_DIVIDE  &kp KP_MULTIPLY  &trans
&trans  &trans  &trans  &trans    &trans     &trans  &trans                                      &trans  &trans  &kp KP_N7   &kp KP_N8     &kp KP_N9      &kp KP_MINUS     &trans
&trans  &trans  &trans  &trans    &trans     &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &kp KP_N4   &kp KP_N5     &kp KP_N6      &kp KP_PLUS      &trans
&trans  &trans  &trans  &trans    &trans     &trans                  &trans      &trans                  &trans  &kp KP_N1   &kp KP_N2     &kp KP_N3      &kp KP_ENTER     &trans
&trans  &trans  &trans  &kp LEFT  &kp RIGHT          &trans  &trans  &trans      &trans  &trans  &trans          &kp DOWN     &kp UP      &kp KP_DOT     &trans           &trans
            >;
        };

        // FN Layer
        fn {
            bindings = <
&trans  &kp F1   &kp F2   &kp F3   &kp F4   &kp F5   &trans                                      &trans  &kp F6   &kp F7   &kp F8   &kp F9   &kp F10  &trans
&trans  &kp F11  &kp F12  &kp F13  &kp F14  &kp F15  &trans                                      &trans  &kp F16  &kp F17  &kp F18  &kp F19  &kp F20  &trans
&trans  &trans   &trans   &trans   &trans   &trans   &trans  &trans  &trans      &trans  &trans  &trans  &kp HOME   &kp PG_DN   &kp PG_UP   &kp END   &trans   &trans
&trans  &trans   &trans   &trans   &trans   &trans                   &trans      &trans                  &kp LEFT   &kp DOWN   &kp UP   &trans   &trans   &trans
&trans  &trans   &trans   &trans   &trans            &trans  &trans  &trans      &trans  &trans  &trans           &trans   &trans   &trans   &trans   &trans
            >;
        };
        
        // MOD Layer
        
        mod {
            bindings = <
        &trans &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4 &bootloader                                                                     &bootloader                 &trans        &trans        &trans        &trans &trans &trans
        &trans &trans        &trans        &trans        &trans        &trans        &trans                                                               &trans            &trans        &trans        &trans        &trans &trans &trans
        &trans &trans        &trans        &trans        &trans        &trans        &trans                   &trans &trans &bt BT_CLR &trans                      &rgb_ug RGB_MEFS_CMD 5 &trans        &trans        &trans        &trans &trans &trans
        &trans &trans        &trans        &trans        &trans        &trans                                      &trans &trans                                                        &trans        &trans        &trans        &trans &trans &trans
        &trans &trans        &trans        &trans        &trans                                       &trans &trans &trans &trans      &bl BL_TOG &rgb_ug RGB_TOG                                     &bl BL_INC   &bl BL_DEC   &trans &trans &trans
            >;
        };
    };
};
